# 1. NGINX receives a request for a PHP script from a client.
# 2. NGINX sends the request to PHP-FPM via the FastCGI protocol.
# 3. PHP-FPM processes the PHP script and generates the response.
# 4. PHP-FPM sends the response back to NGINX through the FastCGI protocol.
# 5. NGINX delivers the response to the client.

server {
    listen 443 ssl;
    # domain_name
    server_name ibenmain.42.fr;
    # The root directive specifies the root directory where the web files are located.
    root /var/www/wp;
    index index.html index.php;

    ssl_certificate /etc/ssl/certificate.crt;
    ssl_certificate_key /etc/ssl/private.key;

    ssl_protocols TLSv1.3;
    # The location / block handles requests for static files or directories. If a matching file or directory is not found, it passes the request to index.php for further processing.
    location / {
        try_files $uri $uri/ /index.php;
    }
    # The location ~ \.php$ block handles requests for PHP files. It specifies the location of the PHP-FPM server using the fastcgi_pass directive
    location ~ \.php$ {
        fastcgi_pass wordpress:9000;
        # The fastcgi_index directive sets the default PHP file to index.php
        fastcgi_index index.php;
        # fastcgi_param REQUST_METHOD $request_method;
        # The fastcgi_param SCRIPT_FILENAME directive sets the SCRIPT_FILENAME parameter to the requested PHP file's absolute path.
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # The include fastcgi_params directive includes the common FastCGI configuration parameters.
    }
}